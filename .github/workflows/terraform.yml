# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the "main" branch, `terraform apply` will be executed.
#
# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform
#
# To use this workflow, you will need to complete the following setup steps.
#
# 1. Create a `main.tf` file in the root of this repository with the `remote` backend and one or more resources defined.
#   Example `main.tf`:
#     # The configuration for the `remote` backend.
#     terraform {
#       backend "remote" {
#         # The name of your Terraform Cloud organization.
#         organization = "example-organization"
#
#         # The name of the Terraform Cloud workspace to store Terraform state files in.
#         workspaces {
#           name = "example-workspace"
#         }
#       }
#     }
#
#     # An example resource that does nothing.
#     resource "null_resource" "example" {
#       triggers = {
#         value = "A example resource that does nothing!"
#       }
#     }
#
#
# 2. Generate a Terraform Cloud user API token and store it as a GitHub secret (e.g. TF_API_TOKEN) on this repository.
#   Documentation:
#     - https://www.terraform.io/docs/cloud/users-teams-organizations/api-tokens.html
#     - https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
#
# 3. Reference the GitHub secret in step using the `hashicorp/setup-terraform` GitHub Action.
#   Example:
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

name: Terraform Workflow

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest  # Job runs on Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the repo code

      - name: List files in repository (Debug)
        run: |
          echo "Listing files in the repository:"
          ls -al
          echo "Listing files in terraform/ directory:"
          ls -al terraform/

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1  # Set up Terraform CLI

      - name: Terraform Init
        run: terraform init  # Initialize the Terraform working directory
        working-directory: terraform/

      - name: Terraform Validate
        run: terraform validate  # Validate the Terraform configuration files
        working-directory: terraform/

      - name: Terraform Plan
        run: terraform plan  # Show the execution plan (what Terraform will do)
        working-directory: terraform/

      - name: Terraform Apply
        run: terraform apply -auto-approve  # Apply the plan (create/update resources)
        working-directory: terraform/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Use secrets for AWS credentials
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2  # Define the AWS region

